#user  nobody;
worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;


    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        auth_digest_user_file /usr/local/nginx/auth/passwd.digest;
        auth_digest_shm_size 4m;  
        
        location / {
            root   html;
            index  200.html index.html index.htm;

            auth_digest 'This is not for you';
            auth_digest_timeout 30s; # allow users to wait 1 minute between receiving the
                                    # challenge and hitting send in the browser dialog box
            auth_digest_expires 10s; # after a successful challenge/response, let the client
                                    # continue to use the same nonce for additional requests
                                    # for 10 seconds before generating a new challenge
            auth_digest_replays 20;  # also generate a new challenge if the client uses the
                                     # same nonce more than 20 times before the expire time limit
            # The amount of time for which the server will ignore authentication requests from a client address once the number of failed authentications from that client reaches auth_digest_maxtries.
            auth_digest_evasion_time 60s;    
            # The number of failed authentication attempts from a client address before the module enters evasive tactics. For evasion purposes, only network clients are tracked, and only by address (not including port number). A successful authentication clears the counters.
            auth_digest_maxtries 5;
            # 於 Header 加入不需要 Cache 指令
            add_header Cache-Control no-cache;  
            add_header Cache-Control private;
        }

        error_page  401              /401.html;
        error_page  403              /403.html;
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}